Mongo Db Command : 

	*** Start Mongo : mongo ***

-> Show Database : show dbs
-> Show Current Database : db
-> Switch Database or create : use (name of database) //If that not present They create
-> Show Collections : show collections
-> Find Document : db.(name of collection).find().pretty()
-> Insert Data : db.(name of collection).insertOne or Many([{enter data},{enter data}]);
			
			** CRUD Oparation **
			
-> Create : db.collection_name.insertMany([{enter_data},{}]);

-> Read : -> db.collection.find({name:'smit'})
		  -> db.collection.find({name:'smit'},{name:0})  // 0:false,1:true
		  -> db.collection.find({name:'smit},{name:1,_id:0}) //_id remove
		  -> db.collection.find({branch:'IT'},{branch:1}).limit(1) //limit 
		     ...or...
		  -> db.collection.findOne({branch:'IT'},{branch:1})
		  -> db.collection.find({branch:'IT'},{branch:1}).limit(1).skip(1)
		  
-> UpDate : ->db.collection_name.updateMany(<filter>,<update>) or updateOne
			->db.smit.updateOne({name:"smit"},{$set:{name:"sahil"}}) //$set use for replce value 

-> Delete : ->db.collection_name.deleteMany({name:"smit"})
			->db.collection_name.deleteMany({}) //delete all the data
			
-> GT & LT : db.myCollection.find({field1: {$gt:25, $lt:32}});

			** GUI Compass **
						
// Connect Nodejs to MongoDb 

//mongoose is an object data modeling(ODM) library for mongoDB And Node Js

// install :   npm i mongoose
//             npm i nodemon
//             npm i express

const mongoose = require("mongoose");
const nodemon = require("nodemon");
const express = require('express')

const app = express();
app.listen(5000, () => { console.log("port on 5000") })

//Schema : a mongooes schema define structure of documentaion 

const listSchema = new mongoose.Schema({
    name: {
        type: String,
        required: true
    },
    RN: Number,
    branch: {
        type: String,
        required: true
    }
})

//connection 

mongoose.connect("mongodb://localhost:27017/NodeData").then(
    () => console.log("connected")).catch((err) => console.log(err));

//create colllection 

const list = new mongoose.model("list", listSchema);

//create document or insert

const createDoc = async () => {
    try {
        const datalist = new list({
            name: "sahil",
            RN: 26,
            branch: "CV"
        })
        const datalist_1 = new list({
            name: "mohit",
            RN: 25,
            branch: "CE"
        })
        const datalist_2 = new list({
            name: "ramesh",
            RN: 24,
            branch: "ME"
        })
        const datalist_3 = new list({
            name: "smit",
            RN: 23,
            branch: "CE"
        })
        const datalist_4 = new list({
            name: "keval",
            RN: 22,
            branch: "CV"
        })
        const datalist_5 = new list({
            name: "neha",
            RN: 21,
            branch: "IT"
        })
        const datalist_6 = new list({
            name: "ajay",
            RN: 20,
            branch: "IT"
        })
        const datalist_7 = new list({
            name: "rahul",
            RN: 1,
            branch: "IT"
        })
        const datalist_8 = new list({
            name: "dhruv",
            RN: 2,
            branch: "CE"
        })
        const datalist_9 = new list({
            name: "nirmal",
            RN: 3,
            branch: "ME"
        })
        const datalist_10 = new list({
            name: "mihir",
            RN: 4,
            branch: "CV"
        })
        const datalist_11 = new list({
            name: "yash",
            RN: 5,
            branch: "CE"
        })
        const datalist_12 = new list({
            name: "kaushal",
            RN: 6,
            branch: "IT"
        })
        const datalist_13 = new list({
            name: "siddharth",
            RN: 7,
            branch: "AG"
        })
        const datalist_14 = new list({
            name: "jay",
            RN: 8,
            branch: "AG"
        })
        const datalist_15 = new list({
            name: "raj",
            RN: 9,
            branch: "Cv"
        })
        const result = await list.insertMany([datalist, datalist_1, datalist_2, datalist_3, datalist_4, datalist_5, datalist_6, datalist_7, datalist_8, datalist_9, datalist_10, datalist_11, datalist_12, datalist_13, datalist_14])
    } catch (err) {
        console.log(err);
    }

}
// datalist.save(); // for only one data
// createDoc(); //function callK

// read document 
// & Opraters({$gt}) : $gte ,$lte ,$lt , { $in: ["sumit","smit","sahil"] },{ $nin: ["sumit","smit","sahil"] }
// .count() & .sort()

const getDoc = async () => {
    const result = await list
        .find({ RN: { $gt: 1 } })
        .select({ _id: 1 }).skip(0).limit(1);
    // .count();
    // .sort({ RN: 1 }); // {name : 1 } or -1=> sorting a to z
    console.log(result);
}
getDoc();

// update document

const updateDocument = async (_id) => {
    const res = await list.updateOne({ _id }, {
        $set: {
            name: "Rahul"
        }
    });
    console.log(res);
}       
updateDocument("62492e7d3b8e8e14ca9a6e6c");

// Delete document 

